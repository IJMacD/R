{"version":3,"sources":["Console.jsx","Variables.jsx","Graph.jsx","interpreter.js","App.js","serviceWorker.js","index.js"],"names":["scrollback","Console","props","history","sendCommand","_React$useState","React","useState","_React$useState2","Object","slicedToArray","input","setInput","ref","useRef","handleInput","e","setTimeout","current","scrollTop","scrollHeight","handleScrollback","down","arguments","length","undefined","inputs","filter","h","type","content","react_default","a","createElement","className","map","line","key","id","concat","value","autoFocus","onChange","target","onKeyDown","preventDefault","onClick","Variables","variables","keys","name","JSON","stringify","interpreter","command","context","setContext","tokens","i","tail","substr","GRAMMAR","g","match","exec","push","whitespaceMatch","Error","tokenizer","t1","t2","t3","assignValue","evaluateValue","evaluateExpression","t4","t5","val","string","m","number","operator","token","v","evaluateNumeric","objectSpread","defineProperty","op","v1","v3","STATE_KEY","App","setHistory","_React$useState3","defaultState","s","localStorage","getItem","parse","retrieveState","_React$useState4","style","flex","Console_Console","newHistory","toConsumableArray","output","state","setItem","message","Variables_Variables","Graph_Variables","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0de34dc6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Console.css';\r\n\r\nlet scrollback = 0;\r\n\r\nexport default function Console (props) {\r\n    const { history, sendCommand } = props;\r\n    const [ input, setInput ] = React.useState(\"\");\r\n    const ref = React.useRef();\r\n\r\n    function handleInput (e) {\r\n        sendCommand(input);\r\n        setInput(\"\");\r\n        setTimeout(() => ref.current.scrollTop = ref.current.scrollHeight, 10);\r\n        scrollback = 0;\r\n    }\r\n\r\n    function handleScrollback (down=false) {\r\n        const inputs = history.filter(h => h.type === \"input\");\r\n\r\n        if (down && scrollback > 1) {\r\n            scrollback--;\r\n        }\r\n        else if (!down && scrollback < inputs.length) {\r\n            scrollback++;\r\n        }\r\n\r\n        setInput(inputs[inputs.length - scrollback].content);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Console\">\r\n            <div className=\"Console-historyscroller\" ref={ref}>\r\n                <ul className=\"Console-history\">\r\n                {\r\n                    history.map(line => {\r\n                        if (line.type === \"input\") {\r\n                            return <li key={line.id} className=\"line line-input\">> {line.content}</li>;\r\n                        }\r\n                        return <li key={line.id} className={`line line-${line.type}`}>{line.content}</li>;\r\n                    })\r\n                }\r\n                </ul>\r\n            </div>\r\n            <div className=\"Console-inputline\">\r\n                <span className=\"Console-prompt\">></span>\r\n                <input\r\n                    value={input}\r\n                    className=\"Console-input\"\r\n                    autoFocus\r\n                    onChange={e => setInput(e.target.value)}\r\n                    onKeyDown={e => {\r\n                        if (e.key === \"Enter\") { handleInput(); }\r\n                        else if (e.key === \"ArrowUp\") { handleScrollback(); e.preventDefault(); }\r\n                        else if (e.key === \"ArrowDown\") { handleScrollback(true); e.preventDefault(); }\r\n                    }}\r\n                />\r\n                <button onClick={handleInput}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport './Variables.css';\r\n\r\nexport default function Variables (props) {\r\n    const { variables } = props;\r\n\r\n    return (\r\n        <table className=\"Variables\">\r\n            <thead>\r\n                <tr><th>Name</th><th>Value</th></tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n                Object.keys(variables).map(name => <tr key={name}><td>{name}</td><td>{JSON.stringify(variables[name])}</td></tr>)\r\n            }\r\n            </tbody>\r\n        </table>\r\n    );\r\n}","import React from 'react';\r\n\r\nexport default function Variables (props) {\r\n    return <div></div>;\r\n}","/**\r\n *\r\n * @param {string} command\r\n * @param {{ [name: string]: any }} context\r\n * @param {(context: { [name: string]: any }) => void} setContext\r\n */\r\nexport default function interpreter (command, context, setContext) {\r\n    if (command.length === 0) {\r\n        return;\r\n    }\r\n\r\n    const tokens = tokenizer(command);\r\n\r\n    if (tokens.length === 1) {\r\n        if (tokens[0].type === \"name\") {\r\n            if (tokens[0].value in context) {\r\n                return JSON.stringify(context[tokens[0].value]);\r\n            } else {\r\n                throw Error(\"symbol not found: \" + tokens[0].value);\r\n            }\r\n        }\r\n\r\n        if (tokens[0].type === \"number\" || tokens[0].type === \"string\") {\r\n            return JSON.stringify(tokens[0].value);\r\n        }\r\n\r\n        throw Error(\"Invalid expression\");\r\n    }\r\n\r\n    if (tokens.length === 3) {\r\n        const t1 = tokens[0];\r\n        const t2 = tokens[1];\r\n        const t3 = tokens[2];\r\n\r\n        if (t2.type !== \"operator\")\r\n        {\r\n            throw Error(\"Expression not supported\");\r\n        }\r\n\r\n        if (t2.value === \"<-\" && t1.type === \"name\") {\r\n            return assignValue(context, setContext, t1.value, evaluateValue(context, t3));\r\n        } else if (t2.value === \"->\" && t3.type === \"name\") {\r\n            return assignValue(context, setContext, t3.value, evaluateValue(context, t1));\r\n        }\r\n\r\n        return evaluateExpression(context, t1, t2.value, t3);\r\n    }\r\n\r\n    if (tokens.length === 5) {\r\n        const t1 = tokens[0];\r\n        const t2 = tokens[1];\r\n        const t3 = tokens[2];\r\n        const t4 = tokens[3];\r\n        const t5 = tokens[4];\r\n\r\n        if (t2.type !== \"operator\" || t4.type !== \"operator\")\r\n        {\r\n            throw Error(\"Expression not supported\");\r\n        }\r\n\r\n        if (t2.value === \"<-\" && (t4.value !== \"<-\" && t4.value !== \"->\") && t1.type === \"name\") {\r\n            const val = evaluateExpression(context, t3, t4.value, t5);\r\n            return assignValue(context, setContext, t1.value, val);\r\n        } else if (t4.value === \"->\" && (t2.value !== \"<-\" && t2.value !== \"->\") && t5.type === \"name\") {\r\n            const val = evaluateExpression(context, t1, t2.value, t3);\r\n            return assignValue(context, setContext, t5.value, val);\r\n        } else {\r\n            const val = evaluateExpression(context, t1, t2.value, t3);\r\n            return evaluateExpression(context, val, t4.value, t5);\r\n        }\r\n    }\r\n\r\n    throw Error(`Command not recognised: '${command}'`);\r\n}\r\n\r\nconst GRAMMAR = {\r\n    string: {\r\n        match: /^\"([^\"]*)\"/,\r\n        map: m => m[1],\r\n    },\r\n    number: {\r\n        match: /^-?[0-9]+(?:\\.[0-9]+)?/,\r\n        map: m => +m[0],\r\n    },\r\n    name: {\r\n        match: /^[a-z][a-z0-9_]*/,\r\n    },\r\n    operator: {\r\n        match: /^(<-|->|\\+|-|\\*|\\/)/,\r\n    },\r\n};\r\n\r\n/**\r\n *\r\n * @param {string} input\r\n */\r\nfunction tokenizer (input) {\r\n    let i = 0;\r\n    const tokens = [];\r\n\r\n    while (i < input.length) {\r\n        let tail = input.substr(i);\r\n\r\n        for (const type in GRAMMAR) {\r\n            const g = GRAMMAR[type];\r\n            const match = g.match.exec(tail);\r\n            if (match) {\r\n                tokens.push({\r\n                    type,\r\n                    value: g.map ? g.map(match) : match[0],\r\n                });\r\n                i += match[0].length;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (i < input.length) {\r\n            tail = input.substr(i);\r\n\r\n            const whitespaceMatch = /^\\s*/.exec(tail);\r\n            if (whitespaceMatch) {\r\n                i += whitespaceMatch[0].length;\r\n                continue;\r\n            }\r\n\r\n            throw Error(\"Unrecognised Input: \" + tail.substr(0, 10));\r\n        }\r\n    }\r\n\r\n    return tokens;\r\n}\r\n\r\nfunction evaluateValue (context, token) {\r\n    if (typeof token === \"number\" || typeof token === \"string\") {\r\n        return token;\r\n    }\r\n\r\n    const v = token.type === \"name\" ? context[token.value] : token.value;\r\n\r\n    if (typeof v === \"undefined\") {\r\n        throw Error(\"symbol not found: \" + token.value);\r\n    }\r\n\r\n    return v;\r\n}\r\n\r\nfunction evaluateNumeric (context, token) {\r\n    if (typeof token === \"number\") {\r\n        return token;\r\n    }\r\n\r\n    if (token.type !== \"number\" && token.type !== \"name\") {\r\n        throw Error(`Invalid numeric value: [${token.value}]`);\r\n    }\r\n\r\n    const v = token.type === \"name\" ? context[token.value] : token.value;\r\n\r\n    if (typeof v === \"undefined\") {\r\n        throw Error(\"symbol not found: \" + token.value);\r\n    } else if (typeof v !== \"number\") {\r\n        throw Error(`Variable '${token.value}' does not contain a numeric value`);\r\n    }\r\n\r\n    return v;\r\n}\r\n\r\nfunction assignValue (context, setContext, name, value) {\r\n    setContext({\r\n        ...context,\r\n        [name]: value,\r\n    });\r\n}\r\n\r\nfunction evaluateExpression (context, t1, op, t3) {\r\n    const v1 = evaluateNumeric(context, t1);\r\n    const v3 = evaluateNumeric(context, t3);\r\n\r\n    switch (op) {\r\n        case \"+\": {\r\n            return v1 + v3;\r\n        }\r\n        case \"-\": {\r\n            return v1 - v3;\r\n        }\r\n        case \"*\": {\r\n            return v1 * v3;\r\n        }\r\n        case \"/\": {\r\n            return v1 / v3;\r\n        }\r\n    }\r\n\r\n    throw Error(\"Unrecognised operator: \" + op);\r\n}","import React from 'react';\nimport './App.css';\n\nimport Console from './Console';\nimport Variables from './Variables';\nimport Graph from './Graph';\n\nimport interpreter from './interpreter';\n\nconst STATE_KEY = \"R_VARIABLES\";\n\nfunction App() {\n  const [ history , setHistory ] = React.useState([]);\n  const [ context , setContext ] = React.useState(retrieveState(STATE_KEY));\n\n  return (\n    <div className=\"App\">\n      <div className=\"panel\">\n        <div style={{ flex: 4 }}>\n          <Console history={history} sendCommand={input => {\n            const newHistory = [\n              ...history,\n              { id: history.length + 1, type: \"input\", content: input }\n            ];\n            try {\n              const output = interpreter(input, context, (context) => { setContext(context); persistState(STATE_KEY, context); });\n              if (output) {\n                newHistory.push({ id: history.length + 2, type: \"output\", content: output });\n              }\n            } catch (e) {\n              newHistory.push({ id: history.length + 2, type: \"error\", content: e.message });\n            }\n            setHistory(newHistory);\n          }} />\n        </div>\n        <div className=\"panel panel-vertical\">\n          <Variables variables={context} />\n          <Graph />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction persistState (key, state) {\n  localStorage.setItem(key, JSON.stringify(state));\n}\n\nfunction retrieveState (key, defaultState={}) {\n  try {\n    const s = localStorage.getItem(key);\n    return s ? JSON.parse(s) : defaultState;\n  } catch (e) {\n    return defaultState;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}